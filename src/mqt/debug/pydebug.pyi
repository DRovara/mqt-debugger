# Enums
class Result:
    OK: Result
    ERROR: Result

class VariableType:
    VarBool: VariableType
    VarInt: VariableType
    VarFloat: VariableType

# Classes
class VariableValue:
    boolValue: bool
    intValue: int
    floatValue: float

    def __init__(self) -> None: ...

class Variable:
    name: str
    type: VariableType
    value: VariableValue

    def __init__(self) -> None: ...

class Complex:
    real: float
    imaginary: float

    def __init__(self) -> None: ...

class Statevector:
    numQubits: int
    numStates: int
    amplitudes: list[Complex]

    def __init__(self) -> None: ...

class SimulationState:
    init: callable | None
    loadCode: callable | None
    stepForward: callable | None
    stepOverForward: callable | None
    stepBackward: callable | None
    stepOverBackward: callable | None
    runSimulation: callable | None
    resetSimulation: callable | None
    canStepForward: callable | None
    canStepBackward: callable | None
    isFinished: callable | None
    didAssertionFail: callable | None
    getCurrentInstruction: callable | None
    getPreviousInstruction: callable | None
    getInstructionCount: callable | None
    getInstructionPosition: callable | None
    getNumQubits: callable | None
    getAmplitudeIndex: callable | None
    getAmplitudeBitstring: callable | None
    getClassicalVariable: callable | None
    getStateVectorFull: callable | None
    getStateVectorSub: callable | None
    getDataDependencies: callable | None

    def __init__(self) -> None: ...
    def call_init(self) -> None: ...
    def call_loadCode(self, code: str) -> None: ...
    def call_stepForward(self) -> None: ...
    def call_stepOverForward(self) -> None: ...
    def call_stepBackward(self) -> None: ...
    def call_stepOverBackward(self) -> None: ...
    def call_runSimulation(self) -> None: ...
    def call_resetSimulation(self) -> None: ...
    def call_canStepForward(self) -> bool: ...
    def call_canStepBackward(self) -> bool: ...
    def call_isFinished(self) -> bool: ...
    def call_didAssertionFail(self) -> bool: ...
    def call_getCurrentInstruction(self) -> str: ...
    def call_getPreviousInstruction(self) -> str: ...
    def call_getInstructionCount(self) -> int: ...
    def call_getInstructionPosition(self, instruction: int, start: int | None, end: int | None) -> None: ...
    def call_getNumQubits(self) -> int: ...
    def call_getAmplitudeIndex(self, qubit: int, output: Complex) -> None: ...
    def call_getAmplitudeBitstring(self, bitstring: str, output: Complex) -> None: ...
    def call_getClassicalVariable(self, name: str, output: Variable) -> None: ...
    def call_getStateVectorFull(self, output: Statevector) -> None: ...
    def call_getStateVectorSub(self, subStateSize: int, qubits: list[int], output: Statevector) -> None: ...
    def call_getDataDependencies(self, instruction: int, instructions: list[bool]) -> None: ...

def create_ddsim_simulation_state() -> SimulationState: ...
def destroy_ddsim_simulation_state(state: SimulationState) -> None: ...
